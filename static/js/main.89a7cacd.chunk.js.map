{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","doc","setDoc","responses","setResponses","useEffect","GoogleSpreadsheet","useApiKey","loadInfo","then","response","sheet","sheetsByIndex","getRows","rows","catch","error","console","log","rowData","map","email","_rawData","winner","Math","floor","random","length","winnerName","winnerEmail","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qbA4DeA,MAzDf,WAAgB,IAAD,EAEQC,qBAFR,mBAEPC,EAFO,KAEFC,EAFE,OAGoBF,mBAAiC,IAHrD,mBAGPG,EAHO,KAGIC,EAHJ,KAKdC,qBAAU,WACTH,EAAO,IAAII,oBAAkB,mDAC3B,IAEHD,qBAAU,WACLJ,IACHA,EAAIM,UAAU,2CAEdN,EAAIO,WACFC,MAAK,SAACC,GACN,IAAMC,EAAK,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAKW,cAAc,GAC5B,OAALD,QAAK,IAALA,KAAOE,UACLJ,MAAK,SAACK,GACNV,EAAaU,MACXC,OAAM,SAACC,GACTC,QAAQC,IAAIF,SAEZD,OAAM,SAACC,GACTC,QAAQC,IAAIF,SAGb,CAACf,IAEJ,IAAMkB,EAAO,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAWiB,KAAI,SAACV,GAC/B,IAAMW,EAAQX,EAASY,SAAS,GAEhC,OAAO,+BACLD,EADK,MAASA,MAOXE,EAASpB,EAFKqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAUwB,SAGnDC,EAAU,iBAAML,QAAN,IAAMA,OAAN,EAAMA,EAAQD,SAAS,GAAvB,mBAA6BC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQD,SAAS,IACxDO,EAAW,iBAAMN,QAAN,IAAMA,OAAN,EAAMA,EAAQD,SAAS,IAExC,OACC,qBAAKQ,UAAU,MAAf,SAEEP,GACA,qCACC,6BACEJ,IAEF,+CAAgBS,EAAhB,aAA+BC,WCjDpCE,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,U","file":"static/js/main.89a7cacd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleSpreadsheet, GoogleSpreadsheetRow } from 'google-spreadsheet';\n\nfunction App() {\n\n\tconst [doc, setDoc] = useState<GoogleSpreadsheet>();\n\tconst [responses, setResponses] = useState<GoogleSpreadsheetRow[]>([]);\n\n\tuseEffect(() => {\n\t\tsetDoc(new GoogleSpreadsheet('1OEry52CfvOobIL9hjQGPOCl0ncIMF_KHrtY4glougLE'));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (doc) {\n\t\t\tdoc.useApiKey(\"AIzaSyCOrD6IBVG0UHiFANoaHMStiZXN8bYsqV8\");\n\n\t\t\tdoc.loadInfo()\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconst sheet = doc?.sheetsByIndex[0];\n\t\t\t\t\tsheet?.getRows()\n\t\t\t\t\t\t.then((rows) => {\n\t\t\t\t\t\t\tsetResponses(rows);\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t});\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t}, [doc]);\n\n\tconst rowData = responses?.map((response) => {\n\t\tconst email = response._rawData[3];\n\n\t\treturn <li key={email}>\n\t\t\t{email};\n\t\t</li>\n\t});\n\n\tconst randomIndex = Math.floor(Math.random() * responses.length);\n\n\tconst winner = responses[randomIndex];\n\tconst winnerName = `${winner?._rawData[1]} ${winner?._rawData[2]}`;\n\tconst winnerEmail = `${winner?._rawData[3]}`;\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\twinner &&\n\t\t\t\t<>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{rowData}\n\t\t\t\t\t</ol>\n\t\t\t\t\t<h1>{`Winner: ${winnerName}, ${winnerEmail}`}</h1>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}